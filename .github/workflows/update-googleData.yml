name: Update googleData.json

on:
  schedule:
    # - cron: "0 */10 * * *"   # co 10 min
    # - cron: "0 */1 * * *"    # co 1 godzin
    - cron: "0 */12 * * *" # co 12 godzin
    # - cron: "0 0 * * *"      # co dziennie o p√≥≈Çnocy

  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-googleData:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout kodu
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Ustaw Node.js
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 3. Instalacja zale≈ºno≈õci
      - name: Instaluj zale≈ºno≈õci (npm install)
        run: npm install

      # 4. Przekazanie Google API Key jako zmiennej ENV
      - name: Ustaw zmiennƒÖ NEXT_PUBLIC_GOOGLE_API_KEY
        run: |
          echo "NEXT_PUBLIC_GOOGLE_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_API_KEY }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_PLACE_ID=${{ secrets.NEXT_PUBLIC_PLACE_ID }}" >> $GITHUB_ENV

      # 5. Uruchomienie skryptu Node.js (aktualizacja googleData.json)
      - name: Uruchom update-googleData.js
        run: npm run update-googleData

      - name: Debug ‚Äì sprawd≈∫ czy plik googleData.json istnieje
        run: |
          echo "Pliki w repo:"
          ls -la
          echo "Zawarto≈õƒá googleData.json:"
          cat googleData.json || echo "googleData.json nie istnieje"

      # 6. Commit i push zmian w googleData.json (je≈õli zasz≈Çy)
      - name: Commit i Push zmian w googleData.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          echo "=== üßæ Obecna wersja googleData.json z repo ==="
          git show HEAD:public/googleData.json || echo "Plik nie istnieje w repozytorium."

          echo "=== üÜï Nowa wersja googleData.json (po aktualizacji) ==="
          cat public/googleData.json || echo "Plik nie zosta≈Ç wygenerowany."

          echo "=== ‚ûï Dodajemy googleData.json do stage'a ==="
          git add public/googleData.json

          echo "=== üîç R√≥≈ºnice staged (git diff --cached) ==="
          git diff --cached || echo "Brak r√≥≈ºnic."

          if git diff --cached --quiet; then
            echo "Brak zmian w googleData.json ‚Äì nic do commitowania."
          else
            git commit -m "Automatyczna aktualizacja danych: $(date -u '+%Y-%m-%d %H:%M UTC')"
            git push
          fi
